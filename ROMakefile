# Makefile for basicc

COMPONENT = basicc

OBJS = compiler
LIBS = backends.riscos.o.riscos arch.arm32.o.arm32 frontend.o.frontend common.o.common

CFLAGS ?= -Wxla

INSTDIR ?= <Obey$Dir>

include CApp

clean::
        ${WIPE} ${INSTAPP} ${WFLAGS}

# Dynamic dependencies:
o.compiler:	c.compiler
o.compiler:	arch.arm32.h.arm_encode
o.compiler:	arch.arm32.h.arm_core
o.compiler:	arch.arm32.^.^.common.h.ir
o.compiler:	arch.arm32.^.^.common.h.buffer
o.compiler:	arch.arm32.^.^.common.h.error
o.compiler:	arch.arm32.^.^.common.h.config
o.compiler:	arch.arm32.^.^.common.h.builtins
o.compiler:	arch.arm32.^.^.common.h.type
o.compiler:	arch.arm32.^.^.common.h.error
o.compiler:	arch.arm32.^.^.common.h.error
o.compiler:	arch.arm32.^.^.common.h.string_pool
o.compiler:	arch.arm32.^.^.common.h.error
o.compiler:	arch.arm32.^.^.common.h.type
o.compiler:	arch.arm32.h.fpa_gen
o.compiler:	arch.arm32.^.^.common.h.ir
o.compiler:	arch.arm32.h.arm_core
o.compiler:	backends.riscos.h.riscos_arm
o.compiler:	backends.riscos.^.^.arch.arm32.h.arm_core
o.compiler:	backends.riscos.^.^.common.h.backend_caps
o.compiler:	backends.riscos.h.riscos_arm2
o.compiler:	backends.riscos.^.^.common.h.ir
o.compiler:	common.h.error
o.compiler:	frontend.h.lexer
o.compiler:	frontend.^.common.h.buffer
o.compiler:	frontend.^.common.h.type
o.compiler:	frontend.h.keywords
o.compiler:	frontend.h.stream
o.compiler:	frontend.^.common.h.error
o.compiler:	frontend.h.parser
o.compiler:	frontend.^.common.h.backend_caps
o.compiler:	frontend.^.common.h.ir
o.compiler:	frontend.h.call
o.compiler:	frontend.^.common.h.ir
o.compiler:	frontend.h.lexer
o.compiler:	frontend.h.symbol_table
o.compiler:	frontend.h.hash_table
o.compiler:	frontend.^.common.h.error
o.compiler:	frontend.h.lexer
